name: unit testing

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  setup:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7]

    steps:
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install system dependencies
        run: |
          sudo apt-get -y install libpq-dev libjpeg-dev
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Install project dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Setup settings
        run: |
          mkdir logs
          cp settings-travis.py settings.py
      - name: Run migrations
        run: |
          python manage.py migrate
  
  unit-testing:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Unit test
        run: |
          python manage.py test
  
  linting:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Pylint
        run: |
          pylint anestesista/ caja/ comprobante/ estudio/ medico/ medicamento/ obra_social/ paciente/ practica/ presentacion/ sala/ scripts/ security/ turno/ usuario/
        
  setup-integration-test:
    needs: setup
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
    steps:
      - name: Install newman
        run: |
          npm i newman@4.6.1
      - name: Setup database
        run: |
          psql -c 'create database test_db;' -U postgres
      - name: Create user for testing
        run: |
          python manage.py shell -c "from django.contrib.auth.models import User; User.objects.create_user('asd', 'asd@asd.com', 'asd')"          
      - name: Migrate
        run: |
          python manage.py loaddata fixtures/*.json
      - name: Run server
        run: |
          python manage.py runserver

  integration-test:
    needs: setup-integration-test
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
    steps:
      - name: Run general integration test
        run: |
          node_modules/.bin/newman run integration_tests/cedir_web.postman_collection.json -e integration_tests/local.postman_environment.json --verbose

  integration-test-caja:
    needs: setup-integration-test
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
    steps:
      - name: Run caja integration test
        run: |
          node_modules/.bin/newman run integration_tests/cedir_web_caja.postman_collection.json -e integration_tests/local.postman_environment.json --verbose
        
